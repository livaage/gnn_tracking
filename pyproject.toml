[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--strict-markers", "--strict-config"]
testpaths = [
    "tests"
]
xfail_strict = true
markers = [
    "slow: slow test"
]

[tool.pycln]
all = true


[tool.ruff]
lint.select = [
  "E", "F", "W", # flake8
  "B", "B904",   # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
lint.extend-ignore = [
  "PLR",    # Design related pylint codes
  "E501",   # Line too long
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
  "PD901",  # df is a bad name
  "PGH003", # mypy blanket ignore
  "E741",   # ambiguous variable name
  "PD015"   # df.merge instead of pd.merge
]
target-version = "py37"
src = ["src"]
lint.unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
lint.flake8-unused-arguments.ignore-variadic-names = true
